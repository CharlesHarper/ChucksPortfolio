{"ast":null,"code":"import _classCallCheck from \"/Users/charlesharper/Desktop/Chuck2020/ChucksSite2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/charlesharper/Desktop/Chuck2020/ChucksSite2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n// Deferred\n// thanks http://stackoverflow.com/questions/18096715/implement-deferred-object-without-using-jquery\nfunction Deferred() {\n  this._done = [];\n  this._fail = [];\n}\n\nDeferred.prototype = {\n  execute: function execute(list, args) {\n    var i = list.length;\n    args = Array.prototype.slice.call(args);\n\n    while (i--) {\n      list[i].apply(null, args);\n    }\n  },\n  resolve: function resolve() {\n    this.execute(this._done, arguments);\n  },\n  reject: function reject() {\n    this.execute(this._fail, arguments);\n  },\n  done: function done(callback) {\n    this._done.push(callback);\n  },\n  fail: function fail(callback) {\n    this._fail.push(callback);\n  }\n};\nvar ID = 0;\nvar YoutubeAPIadded = 0;\nvar VimeoAPIadded = 0;\nvar loadingYoutubePlayer = 0;\nvar loadingVimeoPlayer = 0;\nvar loadingYoutubeDefer = new Deferred();\nvar loadingVimeoDefer = new Deferred();\n\nvar VideoWorker = /*#__PURE__*/function () {\n  function VideoWorker(url, options) {\n    _classCallCheck(this, VideoWorker);\n\n    var self = this;\n    self.url = url;\n    self.options_default = {\n      autoplay: false,\n      loop: false,\n      mute: false,\n      volume: 100,\n      showContols: true,\n      // start / end video time in seconds\n      startTime: 0,\n      endTime: 0\n    };\n    self.options = self.extend({}, self.options_default, options); // check URL\n\n    self.videoID = self.parseURL(url); // init\n\n    if (self.videoID) {\n      self.ID = ID++;\n      self.loadAPI();\n      self.init();\n    }\n  } // Extend like jQuery.extend\n\n\n  _createClass(VideoWorker, [{\n    key: \"extend\",\n    value: function extend(out) {\n      var _arguments = arguments;\n      out = out || {};\n      Object.keys(arguments).forEach(function (i) {\n        if (!_arguments[i]) {\n          return;\n        }\n\n        Object.keys(_arguments[i]).forEach(function (key) {\n          out[key] = _arguments[i][key];\n        });\n      });\n      return out;\n    }\n  }, {\n    key: \"parseURL\",\n    value: function parseURL(url) {\n      // parse youtube ID\n      function getYoutubeID(ytUrl) {\n        // eslint-disable-next-line no-useless-escape\n        var regExp = /.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=)([^#\\&\\?]*).*/;\n        var match = ytUrl.match(regExp);\n        return match && match[1].length === 11 ? match[1] : false;\n      } // parse vimeo ID\n\n\n      function getVimeoID(vmUrl) {\n        // eslint-disable-next-line no-useless-escape\n        var regExp = /https?:\\/\\/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/([^\\/]*)\\/videos\\/|album\\/(\\d+)\\/video\\/|video\\/|)(\\d+)(?:$|\\/|\\?)/;\n        var match = vmUrl.match(regExp);\n        return match && match[3] ? match[3] : false;\n      } // parse local string\n\n\n      function getLocalVideos(locUrl) {\n        // eslint-disable-next-line no-useless-escape\n        var videoFormats = locUrl.split(/,(?=mp4\\:|webm\\:|ogv\\:|ogg\\:)/);\n        var result = {};\n        var ready = 0;\n        videoFormats.forEach(function (val) {\n          // eslint-disable-next-line no-useless-escape\n          var match = val.match(/^(mp4|webm|ogv|ogg)\\:(.*)/);\n\n          if (match && match[1] && match[2]) {\n            // eslint-disable-next-line prefer-destructuring\n            result[match[1] === 'ogv' ? 'ogg' : match[1]] = match[2];\n            ready = 1;\n          }\n        });\n        return ready ? result : false;\n      }\n\n      var Youtube = getYoutubeID(url);\n      var Vimeo = getVimeoID(url);\n      var Local = getLocalVideos(url);\n\n      if (Youtube) {\n        this.type = 'youtube';\n        return Youtube;\n      }\n\n      if (Vimeo) {\n        this.type = 'vimeo';\n        return Vimeo;\n      }\n\n      if (Local) {\n        this.type = 'local';\n        return Local;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return !!this.videoID;\n    } // events\n\n  }, {\n    key: \"on\",\n    value: function on(name, callback) {\n      this.userEventsList = this.userEventsList || []; // add new callback in events list\n\n      (this.userEventsList[name] || (this.userEventsList[name] = [])).push(callback);\n    }\n  }, {\n    key: \"off\",\n    value: function off(name, callback) {\n      var _this = this;\n\n      if (!this.userEventsList || !this.userEventsList[name]) {\n        return;\n      }\n\n      if (!callback) {\n        delete this.userEventsList[name];\n      } else {\n        this.userEventsList[name].forEach(function (val, key) {\n          if (val === callback) {\n            _this.userEventsList[name][key] = false;\n          }\n        });\n      }\n    }\n  }, {\n    key: \"fire\",\n    value: function fire(name) {\n      var _this2 = this;\n\n      var args = [].slice.call(arguments, 1);\n\n      if (this.userEventsList && typeof this.userEventsList[name] !== 'undefined') {\n        this.userEventsList[name].forEach(function (val) {\n          // call with all arguments\n          if (val) {\n            val.apply(_this2, args);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play(start) {\n      var self = this;\n\n      if (!self.player) {\n        return;\n      }\n\n      if (self.type === 'youtube' && self.player.playVideo) {\n        if (typeof start !== 'undefined') {\n          self.player.seekTo(start || 0);\n        }\n\n        if (YT.PlayerState.PLAYING !== self.player.getPlayerState()) {\n          self.player.playVideo();\n        }\n      }\n\n      if (self.type === 'vimeo') {\n        if (typeof start !== 'undefined') {\n          self.player.setCurrentTime(start);\n        }\n\n        self.player.getPaused().then(function (paused) {\n          if (paused) {\n            self.player.play();\n          }\n        });\n      }\n\n      if (self.type === 'local') {\n        if (typeof start !== 'undefined') {\n          self.player.currentTime = start;\n        }\n\n        if (self.player.paused) {\n          self.player.play();\n        }\n      }\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var self = this;\n\n      if (!self.player) {\n        return;\n      }\n\n      if (self.type === 'youtube' && self.player.pauseVideo) {\n        if (YT.PlayerState.PLAYING === self.player.getPlayerState()) {\n          self.player.pauseVideo();\n        }\n      }\n\n      if (self.type === 'vimeo') {\n        self.player.getPaused().then(function (paused) {\n          if (!paused) {\n            self.player.pause();\n          }\n        });\n      }\n\n      if (self.type === 'local') {\n        if (!self.player.paused) {\n          self.player.pause();\n        }\n      }\n    }\n  }, {\n    key: \"mute\",\n    value: function mute() {\n      var self = this;\n\n      if (!self.player) {\n        return;\n      }\n\n      if (self.type === 'youtube' && self.player.mute) {\n        self.player.mute();\n      }\n\n      if (self.type === 'vimeo' && self.player.setVolume) {\n        self.player.setVolume(0);\n      }\n\n      if (self.type === 'local') {\n        self.$video.muted = true;\n      }\n    }\n  }, {\n    key: \"unmute\",\n    value: function unmute() {\n      var self = this;\n\n      if (!self.player) {\n        return;\n      }\n\n      if (self.type === 'youtube' && self.player.mute) {\n        self.player.unMute();\n      }\n\n      if (self.type === 'vimeo' && self.player.setVolume) {\n        self.player.setVolume(self.options.volume);\n      }\n\n      if (self.type === 'local') {\n        self.$video.muted = false;\n      }\n    }\n  }, {\n    key: \"setVolume\",\n    value: function setVolume() {\n      var volume = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var self = this;\n\n      if (!self.player || !volume) {\n        return;\n      }\n\n      if (self.type === 'youtube' && self.player.setVolume) {\n        self.player.setVolume(volume);\n      }\n\n      if (self.type === 'vimeo' && self.player.setVolume) {\n        self.player.setVolume(volume);\n      }\n\n      if (self.type === 'local') {\n        self.$video.volume = volume / 100;\n      }\n    }\n  }, {\n    key: \"getVolume\",\n    value: function getVolume(callback) {\n      var self = this;\n\n      if (!self.player) {\n        callback(false);\n        return;\n      }\n\n      if (self.type === 'youtube' && self.player.getVolume) {\n        callback(self.player.getVolume());\n      }\n\n      if (self.type === 'vimeo' && self.player.getVolume) {\n        self.player.getVolume().then(function (volume) {\n          callback(volume);\n        });\n      }\n\n      if (self.type === 'local') {\n        callback(self.$video.volume * 100);\n      }\n    }\n  }, {\n    key: \"getMuted\",\n    value: function getMuted(callback) {\n      var self = this;\n\n      if (!self.player) {\n        callback(null);\n        return;\n      }\n\n      if (self.type === 'youtube' && self.player.isMuted) {\n        callback(self.player.isMuted());\n      }\n\n      if (self.type === 'vimeo' && self.player.getVolume) {\n        self.player.getVolume().then(function (volume) {\n          callback(!!volume);\n        });\n      }\n\n      if (self.type === 'local') {\n        callback(self.$video.muted);\n      }\n    }\n  }, {\n    key: \"getImageURL\",\n    value: function getImageURL(callback) {\n      var self = this;\n\n      if (self.videoImage) {\n        callback(self.videoImage);\n        return;\n      }\n\n      if (self.type === 'youtube') {\n        var availableSizes = ['maxresdefault', 'sddefault', 'hqdefault', '0'];\n        var step = 0;\n        var tempImg = new Image();\n\n        tempImg.onload = function () {\n          // if no thumbnail, youtube add their own image with width = 120px\n          if ((this.naturalWidth || this.width) !== 120 || step === availableSizes.length - 1) {\n            // ok\n            self.videoImage = \"https://img.youtube.com/vi/\".concat(self.videoID, \"/\").concat(availableSizes[step], \".jpg\");\n            callback(self.videoImage);\n          } else {\n            // try another size\n            step++;\n            this.src = \"https://img.youtube.com/vi/\".concat(self.videoID, \"/\").concat(availableSizes[step], \".jpg\");\n          }\n        };\n\n        tempImg.src = \"https://img.youtube.com/vi/\".concat(self.videoID, \"/\").concat(availableSizes[step], \".jpg\");\n      }\n\n      if (self.type === 'vimeo') {\n        var request = new XMLHttpRequest();\n        request.open('GET', \"https://vimeo.com/api/v2/video/\".concat(self.videoID, \".json\"), true);\n\n        request.onreadystatechange = function () {\n          if (this.readyState === 4) {\n            if (this.status >= 200 && this.status < 400) {\n              // Success!\n              var response = JSON.parse(this.responseText);\n              self.videoImage = response[0].thumbnail_large;\n              callback(self.videoImage);\n            } else {// Error :(\n            }\n          }\n        };\n\n        request.send();\n        request = null;\n      }\n    } // fallback to the old version.\n\n  }, {\n    key: \"getIframe\",\n    value: function getIframe(callback) {\n      this.getVideo(callback);\n    }\n  }, {\n    key: \"getVideo\",\n    value: function getVideo(callback) {\n      var self = this; // return generated video block\n\n      if (self.$video) {\n        callback(self.$video);\n        return;\n      } // generate new video block\n\n\n      self.onAPIready(function () {\n        var hiddenDiv;\n\n        if (!self.$video) {\n          hiddenDiv = document.createElement('div');\n          hiddenDiv.style.display = 'none';\n        } // Youtube\n\n\n        if (self.type === 'youtube') {\n          self.playerOptions = {};\n          self.playerOptions.videoId = self.videoID;\n          self.playerOptions.playerVars = {\n            autohide: 1,\n            rel: 0,\n            autoplay: 0,\n            // autoplay enable on mobile devices\n            playsinline: 1\n          }; // hide controls\n\n          if (!self.options.showContols) {\n            self.playerOptions.playerVars.iv_load_policy = 3;\n            self.playerOptions.playerVars.modestbranding = 1;\n            self.playerOptions.playerVars.controls = 0;\n            self.playerOptions.playerVars.showinfo = 0;\n            self.playerOptions.playerVars.disablekb = 1;\n          } // events\n\n\n          var ytStarted;\n          var ytProgressInterval;\n          self.playerOptions.events = {\n            onReady: function onReady(e) {\n              // mute\n              if (self.options.mute) {\n                e.target.mute();\n              } else if (self.options.volume) {\n                e.target.setVolume(self.options.volume);\n              } // autoplay\n\n\n              if (self.options.autoplay) {\n                self.play(self.options.startTime);\n              }\n\n              self.fire('ready', e); // For seamless loops, set the endTime to 0.1 seconds less than the video's duration\n              // https://github.com/nk-o/video-worker/issues/2\n\n              if (self.options.loop && !self.options.endTime) {\n                var secondsOffset = 0.1;\n                self.options.endTime = self.player.getDuration() - secondsOffset;\n              } // volumechange\n\n\n              setInterval(function () {\n                self.getVolume(function (volume) {\n                  if (self.options.volume !== volume) {\n                    self.options.volume = volume;\n                    self.fire('volumechange', e);\n                  }\n                });\n              }, 150);\n            },\n            onStateChange: function onStateChange(e) {\n              // loop\n              if (self.options.loop && e.data === YT.PlayerState.ENDED) {\n                self.play(self.options.startTime);\n              }\n\n              if (!ytStarted && e.data === YT.PlayerState.PLAYING) {\n                ytStarted = 1;\n                self.fire('started', e);\n              }\n\n              if (e.data === YT.PlayerState.PLAYING) {\n                self.fire('play', e);\n              }\n\n              if (e.data === YT.PlayerState.PAUSED) {\n                self.fire('pause', e);\n              }\n\n              if (e.data === YT.PlayerState.ENDED) {\n                self.fire('ended', e);\n              } // progress check\n\n\n              if (e.data === YT.PlayerState.PLAYING) {\n                ytProgressInterval = setInterval(function () {\n                  self.fire('timeupdate', e); // check for end of video and play again or stop\n\n                  if (self.options.endTime && self.player.getCurrentTime() >= self.options.endTime) {\n                    if (self.options.loop) {\n                      self.play(self.options.startTime);\n                    } else {\n                      self.pause();\n                    }\n                  }\n                }, 150);\n              } else {\n                clearInterval(ytProgressInterval);\n              }\n            },\n            onError: function onError(e) {\n              self.fire('error', e);\n            }\n          };\n          var firstInit = !self.$video;\n\n          if (firstInit) {\n            var div = document.createElement('div');\n            div.setAttribute('id', self.playerID);\n            hiddenDiv.appendChild(div);\n            document.body.appendChild(hiddenDiv);\n          }\n\n          self.player = self.player || new window.YT.Player(self.playerID, self.playerOptions);\n\n          if (firstInit) {\n            self.$video = document.getElementById(self.playerID); // get video width and height\n\n            self.videoWidth = parseInt(self.$video.getAttribute('width'), 10) || 1280;\n            self.videoHeight = parseInt(self.$video.getAttribute('height'), 10) || 720;\n          }\n        } // Vimeo\n\n\n        if (self.type === 'vimeo') {\n          self.playerOptions = {\n            id: self.videoID,\n            autopause: 0,\n            transparent: 0,\n            autoplay: self.options.autoplay ? 1 : 0,\n            loop: self.options.loop ? 1 : 0,\n            muted: self.options.mute ? 1 : 0\n          };\n\n          if (self.options.volume) {\n            self.playerOptions.volume = self.options.volume;\n          } // hide controls\n\n\n          if (!self.options.showContols) {\n            self.playerOptions.badge = 0;\n            self.playerOptions.byline = 0;\n            self.playerOptions.portrait = 0;\n            self.playerOptions.title = 0;\n            self.playerOptions.background = 1;\n          }\n\n          if (!self.$video) {\n            var playerOptionsString = '';\n            Object.keys(self.playerOptions).forEach(function (key) {\n              if (playerOptionsString !== '') {\n                playerOptionsString += '&';\n              }\n\n              playerOptionsString += \"\".concat(key, \"=\").concat(encodeURIComponent(self.playerOptions[key]));\n            }); // we need to create iframe manually because when we create it using API\n            // js events won't triggers after iframe moved to another place\n\n            self.$video = document.createElement('iframe');\n            self.$video.setAttribute('id', self.playerID);\n            self.$video.setAttribute('src', \"https://player.vimeo.com/video/\".concat(self.videoID, \"?\").concat(playerOptionsString));\n            self.$video.setAttribute('frameborder', '0');\n            self.$video.setAttribute('mozallowfullscreen', '');\n            self.$video.setAttribute('allowfullscreen', '');\n            hiddenDiv.appendChild(self.$video);\n            document.body.appendChild(hiddenDiv);\n          }\n\n          self.player = self.player || new Vimeo.Player(self.$video, self.playerOptions); // set current time for autoplay\n\n          if (self.options.startTime && self.options.autoplay) {\n            self.player.setCurrentTime(self.options.startTime);\n          } // get video width and height\n\n\n          self.player.getVideoWidth().then(function (width) {\n            self.videoWidth = width || 1280;\n          });\n          self.player.getVideoHeight().then(function (height) {\n            self.videoHeight = height || 720;\n          }); // events\n\n          var vmStarted;\n          self.player.on('timeupdate', function (e) {\n            if (!vmStarted) {\n              self.fire('started', e);\n              vmStarted = 1;\n            }\n\n            self.fire('timeupdate', e); // check for end of video and play again or stop\n\n            if (self.options.endTime) {\n              if (self.options.endTime && e.seconds >= self.options.endTime) {\n                if (self.options.loop) {\n                  self.play(self.options.startTime);\n                } else {\n                  self.pause();\n                }\n              }\n            }\n          });\n          self.player.on('play', function (e) {\n            self.fire('play', e); // check for the start time and start with it\n\n            if (self.options.startTime && e.seconds === 0) {\n              self.play(self.options.startTime);\n            }\n          });\n          self.player.on('pause', function (e) {\n            self.fire('pause', e);\n          });\n          self.player.on('ended', function (e) {\n            self.fire('ended', e);\n          });\n          self.player.on('loaded', function (e) {\n            self.fire('ready', e);\n          });\n          self.player.on('volumechange', function (e) {\n            self.fire('volumechange', e);\n          });\n          self.player.on('error', function (e) {\n            self.fire('error', e);\n          });\n        } // Local\n\n\n        function addSourceToLocal(element, src, type) {\n          var source = document.createElement('source');\n          source.src = src;\n          source.type = type;\n          element.appendChild(source);\n        }\n\n        if (self.type === 'local') {\n          if (!self.$video) {\n            self.$video = document.createElement('video'); // show controls\n\n            if (self.options.showContols) {\n              self.$video.controls = true;\n            } // mute\n\n\n            if (self.options.mute) {\n              self.$video.muted = true;\n            } else if (self.$video.volume) {\n              self.$video.volume = self.options.volume / 100;\n            } // loop\n\n\n            if (self.options.loop) {\n              self.$video.loop = true;\n            } // autoplay enable on mobile devices\n\n\n            self.$video.setAttribute('playsinline', '');\n            self.$video.setAttribute('webkit-playsinline', '');\n            self.$video.setAttribute('id', self.playerID);\n            hiddenDiv.appendChild(self.$video);\n            document.body.appendChild(hiddenDiv);\n            Object.keys(self.videoID).forEach(function (key) {\n              addSourceToLocal(self.$video, self.videoID[key], \"video/\".concat(key));\n            });\n          }\n\n          self.player = self.player || self.$video;\n          var locStarted;\n          self.player.addEventListener('playing', function (e) {\n            if (!locStarted) {\n              self.fire('started', e);\n            }\n\n            locStarted = 1;\n          });\n          self.player.addEventListener('timeupdate', function (e) {\n            self.fire('timeupdate', e); // check for end of video and play again or stop\n\n            if (self.options.endTime) {\n              if (self.options.endTime && this.currentTime >= self.options.endTime) {\n                if (self.options.loop) {\n                  self.play(self.options.startTime);\n                } else {\n                  self.pause();\n                }\n              }\n            }\n          });\n          self.player.addEventListener('play', function (e) {\n            self.fire('play', e);\n          });\n          self.player.addEventListener('pause', function (e) {\n            self.fire('pause', e);\n          });\n          self.player.addEventListener('ended', function (e) {\n            self.fire('ended', e);\n          });\n          self.player.addEventListener('loadedmetadata', function () {\n            // get video width and height\n            self.videoWidth = this.videoWidth || 1280;\n            self.videoHeight = this.videoHeight || 720;\n            self.fire('ready'); // autoplay\n\n            if (self.options.autoplay) {\n              self.play(self.options.startTime);\n            }\n          });\n          self.player.addEventListener('volumechange', function (e) {\n            self.getVolume(function (volume) {\n              self.options.volume = volume;\n            });\n            self.fire('volumechange', e);\n          });\n          self.player.addEventListener('error', function (e) {\n            self.fire('error', e);\n          });\n        }\n\n        callback(self.$video);\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var self = this;\n      self.playerID = \"VideoWorker-\".concat(self.ID);\n    }\n  }, {\n    key: \"loadAPI\",\n    value: function loadAPI() {\n      var self = this;\n\n      if (YoutubeAPIadded && VimeoAPIadded) {\n        return;\n      }\n\n      var src = ''; // load Youtube API\n\n      if (self.type === 'youtube' && !YoutubeAPIadded) {\n        YoutubeAPIadded = 1;\n        src = 'https://www.youtube.com/iframe_api';\n      } // load Vimeo API\n\n\n      if (self.type === 'vimeo' && !VimeoAPIadded) {\n        VimeoAPIadded = 1; // Useful when Vimeo API added using RequireJS https://github.com/nk-o/video-worker/pull/7\n\n        if (typeof Vimeo !== 'undefined') {\n          return;\n        }\n\n        src = 'https://player.vimeo.com/api/player.js';\n      }\n\n      if (!src) {\n        return;\n      } // add script in head section\n\n\n      var tag = document.createElement('script');\n      var head = document.getElementsByTagName('head')[0];\n      tag.src = src;\n      head.appendChild(tag);\n      head = null;\n      tag = null;\n    }\n  }, {\n    key: \"onAPIready\",\n    value: function onAPIready(callback) {\n      var self = this; // Youtube\n\n      if (self.type === 'youtube') {\n        // Listen for global YT player callback\n        if ((typeof YT === 'undefined' || YT.loaded === 0) && !loadingYoutubePlayer) {\n          // Prevents Ready event from being called twice\n          loadingYoutubePlayer = 1; // Creates deferred so, other players know when to wait.\n\n          window.onYouTubeIframeAPIReady = function () {\n            window.onYouTubeIframeAPIReady = null;\n            loadingYoutubeDefer.resolve('done');\n            callback();\n          };\n        } else if (typeof YT === 'object' && YT.loaded === 1) {\n          callback();\n        } else {\n          loadingYoutubeDefer.done(function () {\n            callback();\n          });\n        }\n      } // Vimeo\n\n\n      if (self.type === 'vimeo') {\n        if (typeof Vimeo === 'undefined' && !loadingVimeoPlayer) {\n          loadingVimeoPlayer = 1;\n          var vimeoInterval = setInterval(function () {\n            if (typeof Vimeo !== 'undefined') {\n              clearInterval(vimeoInterval);\n              loadingVimeoDefer.resolve('done');\n              callback();\n            }\n          }, 20);\n        } else if (typeof Vimeo !== 'undefined') {\n          callback();\n        } else {\n          loadingVimeoDefer.done(function () {\n            callback();\n          });\n        }\n      } // Local\n\n\n      if (self.type === 'local') {\n        callback();\n      }\n    }\n  }]);\n\n  return VideoWorker;\n}();\n\nexport { VideoWorker as default };","map":{"version":3,"sources":["/Users/charlesharper/Desktop/Chuck2020/ChucksSite2020/node_modules/video-worker/src/video-worker.esm.js"],"names":["Deferred","_done","_fail","prototype","execute","list","args","i","length","Array","slice","call","apply","resolve","arguments","reject","done","callback","push","fail","ID","YoutubeAPIadded","VimeoAPIadded","loadingYoutubePlayer","loadingVimeoPlayer","loadingYoutubeDefer","loadingVimeoDefer","VideoWorker","url","options","self","options_default","autoplay","loop","mute","volume","showContols","startTime","endTime","extend","videoID","parseURL","loadAPI","init","out","Object","keys","forEach","key","getYoutubeID","ytUrl","regExp","match","getVimeoID","vmUrl","getLocalVideos","locUrl","videoFormats","split","result","ready","val","Youtube","Vimeo","Local","type","name","userEventsList","start","player","playVideo","seekTo","YT","PlayerState","PLAYING","getPlayerState","setCurrentTime","getPaused","then","paused","play","currentTime","pauseVideo","pause","setVolume","$video","muted","unMute","getVolume","isMuted","videoImage","availableSizes","step","tempImg","Image","onload","naturalWidth","width","src","request","XMLHttpRequest","open","onreadystatechange","readyState","status","response","JSON","parse","responseText","thumbnail_large","send","getVideo","onAPIready","hiddenDiv","document","createElement","style","display","playerOptions","videoId","playerVars","autohide","rel","playsinline","iv_load_policy","modestbranding","controls","showinfo","disablekb","ytStarted","ytProgressInterval","events","onReady","e","target","fire","secondsOffset","getDuration","setInterval","onStateChange","data","ENDED","PAUSED","getCurrentTime","clearInterval","onError","firstInit","div","setAttribute","playerID","appendChild","body","window","Player","getElementById","videoWidth","parseInt","getAttribute","videoHeight","id","autopause","transparent","badge","byline","portrait","title","background","playerOptionsString","encodeURIComponent","getVideoWidth","getVideoHeight","height","vmStarted","on","seconds","addSourceToLocal","element","source","locStarted","addEventListener","tag","head","getElementsByTagName","loaded","onYouTubeIframeAPIReady","vimeoInterval"],"mappings":"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","sourcesContent":["// Deferred\n// thanks http://stackoverflow.com/questions/18096715/implement-deferred-object-without-using-jquery\nfunction Deferred() {\n    this._done = [];\n    this._fail = [];\n}\nDeferred.prototype = {\n    execute(list, args) {\n        let i = list.length;\n        args = Array.prototype.slice.call(args);\n        while (i--) {\n            list[i].apply(null, args);\n        }\n    },\n    resolve() {\n        this.execute(this._done, arguments);\n    },\n    reject() {\n        this.execute(this._fail, arguments);\n    },\n    done(callback) {\n        this._done.push(callback);\n    },\n    fail(callback) {\n        this._fail.push(callback);\n    },\n};\n\nlet ID = 0;\nlet YoutubeAPIadded = 0;\nlet VimeoAPIadded = 0;\nlet loadingYoutubePlayer = 0;\nlet loadingVimeoPlayer = 0;\nconst loadingYoutubeDefer = new Deferred();\nconst loadingVimeoDefer = new Deferred();\n\nexport default class VideoWorker {\n    constructor(url, options) {\n        const self = this;\n\n        self.url = url;\n\n        self.options_default = {\n            autoplay: false,\n            loop: false,\n            mute: false,\n            volume: 100,\n            showContols: true,\n\n            // start / end video time in seconds\n            startTime: 0,\n            endTime: 0,\n        };\n\n        self.options = self.extend({}, self.options_default, options);\n\n        // check URL\n        self.videoID = self.parseURL(url);\n\n        // init\n        if (self.videoID) {\n            self.ID = ID++;\n            self.loadAPI();\n            self.init();\n        }\n    }\n\n    // Extend like jQuery.extend\n    extend(out) {\n        out = out || {};\n        Object.keys(arguments).forEach((i) => {\n            if (!arguments[i]) {\n                return;\n            }\n            Object.keys(arguments[i]).forEach((key) => {\n                out[key] = arguments[i][key];\n            });\n        });\n        return out;\n    }\n\n    parseURL(url) {\n        // parse youtube ID\n        function getYoutubeID(ytUrl) {\n            // eslint-disable-next-line no-useless-escape\n            const regExp = /.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=)([^#\\&\\?]*).*/;\n            const match = ytUrl.match(regExp);\n            return match && match[1].length === 11 ? match[1] : false;\n        }\n\n        // parse vimeo ID\n        function getVimeoID(vmUrl) {\n            // eslint-disable-next-line no-useless-escape\n            const regExp = /https?:\\/\\/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/([^\\/]*)\\/videos\\/|album\\/(\\d+)\\/video\\/|video\\/|)(\\d+)(?:$|\\/|\\?)/;\n            const match = vmUrl.match(regExp);\n            return match && match[3] ? match[3] : false;\n        }\n\n        // parse local string\n        function getLocalVideos(locUrl) {\n            // eslint-disable-next-line no-useless-escape\n            const videoFormats = locUrl.split(/,(?=mp4\\:|webm\\:|ogv\\:|ogg\\:)/);\n            const result = {};\n            let ready = 0;\n            videoFormats.forEach((val) => {\n                // eslint-disable-next-line no-useless-escape\n                const match = val.match(/^(mp4|webm|ogv|ogg)\\:(.*)/);\n                if (match && match[1] && match[2]) {\n                    // eslint-disable-next-line prefer-destructuring\n                    result[match[1] === 'ogv' ? 'ogg' : match[1]] = match[2];\n                    ready = 1;\n                }\n            });\n            return ready ? result : false;\n        }\n\n        const Youtube = getYoutubeID(url);\n        const Vimeo = getVimeoID(url);\n        const Local = getLocalVideos(url);\n\n        if (Youtube) {\n            this.type = 'youtube';\n            return Youtube;\n        }\n\n        if (Vimeo) {\n            this.type = 'vimeo';\n            return Vimeo;\n        }\n\n        if (Local) {\n            this.type = 'local';\n            return Local;\n        }\n\n        return false;\n    }\n\n    isValid() {\n        return !!this.videoID;\n    }\n\n    // events\n    on(name, callback) {\n        this.userEventsList = this.userEventsList || [];\n\n        // add new callback in events list\n        (this.userEventsList[name] || (this.userEventsList[name] = [])).push(callback);\n    }\n\n    off(name, callback) {\n        if (!this.userEventsList || !this.userEventsList[name]) {\n            return;\n        }\n\n        if (!callback) {\n            delete this.userEventsList[name];\n        } else {\n            this.userEventsList[name].forEach((val, key) => {\n                if (val === callback) {\n                    this.userEventsList[name][key] = false;\n                }\n            });\n        }\n    }\n\n    fire(name) {\n        const args = [].slice.call(arguments, 1);\n        if (this.userEventsList && typeof this.userEventsList[name] !== 'undefined') {\n            this.userEventsList[name].forEach((val) => {\n                // call with all arguments\n                if (val) {\n                    val.apply(this, args);\n                }\n            });\n        }\n    }\n\n    play(start) {\n        const self = this;\n        if (!self.player) {\n            return;\n        }\n\n        if (self.type === 'youtube' && self.player.playVideo) {\n            if (typeof start !== 'undefined') {\n                self.player.seekTo(start || 0);\n            }\n            if (YT.PlayerState.PLAYING !== self.player.getPlayerState()) {\n                self.player.playVideo();\n            }\n        }\n\n        if (self.type === 'vimeo') {\n            if (typeof start !== 'undefined') {\n                self.player.setCurrentTime(start);\n            }\n            self.player.getPaused().then((paused) => {\n                if (paused) {\n                    self.player.play();\n                }\n            });\n        }\n\n        if (self.type === 'local') {\n            if (typeof start !== 'undefined') {\n                self.player.currentTime = start;\n            }\n            if (self.player.paused) {\n                self.player.play();\n            }\n        }\n    }\n\n    pause() {\n        const self = this;\n        if (!self.player) {\n            return;\n        }\n\n        if (self.type === 'youtube' && self.player.pauseVideo) {\n            if (YT.PlayerState.PLAYING === self.player.getPlayerState()) {\n                self.player.pauseVideo();\n            }\n        }\n\n        if (self.type === 'vimeo') {\n            self.player.getPaused().then((paused) => {\n                if (!paused) {\n                    self.player.pause();\n                }\n            });\n        }\n\n        if (self.type === 'local') {\n            if (!self.player.paused) {\n                self.player.pause();\n            }\n        }\n    }\n\n    mute() {\n        const self = this;\n        if (!self.player) {\n            return;\n        }\n\n        if (self.type === 'youtube' && self.player.mute) {\n            self.player.mute();\n        }\n\n        if (self.type === 'vimeo' && self.player.setVolume) {\n            self.player.setVolume(0);\n        }\n\n        if (self.type === 'local') {\n            self.$video.muted = true;\n        }\n    }\n\n    unmute() {\n        const self = this;\n        if (!self.player) {\n            return;\n        }\n\n        if (self.type === 'youtube' && self.player.mute) {\n            self.player.unMute();\n        }\n\n        if (self.type === 'vimeo' && self.player.setVolume) {\n            self.player.setVolume(self.options.volume);\n        }\n\n        if (self.type === 'local') {\n            self.$video.muted = false;\n        }\n    }\n\n    setVolume(volume = false) {\n        const self = this;\n        if (!self.player || !volume) {\n            return;\n        }\n\n        if (self.type === 'youtube' && self.player.setVolume) {\n            self.player.setVolume(volume);\n        }\n\n        if (self.type === 'vimeo' && self.player.setVolume) {\n            self.player.setVolume(volume);\n        }\n\n        if (self.type === 'local') {\n            self.$video.volume = volume / 100;\n        }\n    }\n\n    getVolume(callback) {\n        const self = this;\n        if (!self.player) {\n            callback(false);\n            return;\n        }\n\n        if (self.type === 'youtube' && self.player.getVolume) {\n            callback(self.player.getVolume());\n        }\n\n        if (self.type === 'vimeo' && self.player.getVolume) {\n            self.player.getVolume().then((volume) => {\n                callback(volume);\n            });\n        }\n\n        if (self.type === 'local') {\n            callback(self.$video.volume * 100);\n        }\n    }\n\n    getMuted(callback) {\n        const self = this;\n        if (!self.player) {\n            callback(null);\n            return;\n        }\n\n        if (self.type === 'youtube' && self.player.isMuted) {\n            callback(self.player.isMuted());\n        }\n\n        if (self.type === 'vimeo' && self.player.getVolume) {\n            self.player.getVolume().then((volume) => {\n                callback(!!volume);\n            });\n        }\n\n        if (self.type === 'local') {\n            callback(self.$video.muted);\n        }\n    }\n\n    getImageURL(callback) {\n        const self = this;\n\n        if (self.videoImage) {\n            callback(self.videoImage);\n            return;\n        }\n\n        if (self.type === 'youtube') {\n            const availableSizes = [\n                'maxresdefault',\n                'sddefault',\n                'hqdefault',\n                '0',\n            ];\n            let step = 0;\n\n            const tempImg = new Image();\n            tempImg.onload = function () {\n                // if no thumbnail, youtube add their own image with width = 120px\n                if ((this.naturalWidth || this.width) !== 120 || step === availableSizes.length - 1) {\n                    // ok\n                    self.videoImage = `https://img.youtube.com/vi/${self.videoID}/${availableSizes[step]}.jpg`;\n                    callback(self.videoImage);\n                } else {\n                    // try another size\n                    step++;\n                    this.src = `https://img.youtube.com/vi/${self.videoID}/${availableSizes[step]}.jpg`;\n                }\n            };\n            tempImg.src = `https://img.youtube.com/vi/${self.videoID}/${availableSizes[step]}.jpg`;\n        }\n\n        if (self.type === 'vimeo') {\n            let request = new XMLHttpRequest();\n            request.open('GET', `https://vimeo.com/api/v2/video/${self.videoID}.json`, true);\n            request.onreadystatechange = function () {\n                if (this.readyState === 4) {\n                    if (this.status >= 200 && this.status < 400) {\n                        // Success!\n                        const response = JSON.parse(this.responseText);\n                        self.videoImage = response[0].thumbnail_large;\n                        callback(self.videoImage);\n                    } else {\n                        // Error :(\n                    }\n                }\n            };\n            request.send();\n            request = null;\n        }\n    }\n\n    // fallback to the old version.\n    getIframe(callback) {\n        this.getVideo(callback);\n    }\n\n    getVideo(callback) {\n        const self = this;\n\n        // return generated video block\n        if (self.$video) {\n            callback(self.$video);\n            return;\n        }\n\n        // generate new video block\n        self.onAPIready(() => {\n            let hiddenDiv;\n            if (!self.$video) {\n                hiddenDiv = document.createElement('div');\n                hiddenDiv.style.display = 'none';\n            }\n\n            // Youtube\n            if (self.type === 'youtube') {\n                self.playerOptions = {};\n                self.playerOptions.videoId = self.videoID;\n                self.playerOptions.playerVars = {\n                    autohide: 1,\n                    rel: 0,\n                    autoplay: 0,\n                    // autoplay enable on mobile devices\n                    playsinline: 1,\n                };\n\n                // hide controls\n                if (!self.options.showContols) {\n                    self.playerOptions.playerVars.iv_load_policy = 3;\n                    self.playerOptions.playerVars.modestbranding = 1;\n                    self.playerOptions.playerVars.controls = 0;\n                    self.playerOptions.playerVars.showinfo = 0;\n                    self.playerOptions.playerVars.disablekb = 1;\n                }\n\n                // events\n                let ytStarted;\n                let ytProgressInterval;\n                self.playerOptions.events = {\n                    onReady(e) {\n                        // mute\n                        if (self.options.mute) {\n                            e.target.mute();\n                        } else if (self.options.volume) {\n                            e.target.setVolume(self.options.volume);\n                        }\n\n                        // autoplay\n                        if (self.options.autoplay) {\n                            self.play(self.options.startTime);\n                        }\n                        self.fire('ready', e);\n\n                        // For seamless loops, set the endTime to 0.1 seconds less than the video's duration\n                        // https://github.com/nk-o/video-worker/issues/2\n                        if (self.options.loop && !self.options.endTime) {\n                            const secondsOffset = 0.1;\n                            self.options.endTime = self.player.getDuration() - secondsOffset;\n                        }\n\n                        // volumechange\n                        setInterval(() => {\n                            self.getVolume((volume) => {\n                                if (self.options.volume !== volume) {\n                                    self.options.volume = volume;\n                                    self.fire('volumechange', e);\n                                }\n                            });\n                        }, 150);\n                    },\n                    onStateChange(e) {\n                        // loop\n                        if (self.options.loop && e.data === YT.PlayerState.ENDED) {\n                            self.play(self.options.startTime);\n                        }\n                        if (!ytStarted && e.data === YT.PlayerState.PLAYING) {\n                            ytStarted = 1;\n                            self.fire('started', e);\n                        }\n                        if (e.data === YT.PlayerState.PLAYING) {\n                            self.fire('play', e);\n                        }\n                        if (e.data === YT.PlayerState.PAUSED) {\n                            self.fire('pause', e);\n                        }\n                        if (e.data === YT.PlayerState.ENDED) {\n                            self.fire('ended', e);\n                        }\n\n                        // progress check\n                        if (e.data === YT.PlayerState.PLAYING) {\n                            ytProgressInterval = setInterval(() => {\n                                self.fire('timeupdate', e);\n\n                                // check for end of video and play again or stop\n                                if (self.options.endTime && self.player.getCurrentTime() >= self.options.endTime) {\n                                    if (self.options.loop) {\n                                        self.play(self.options.startTime);\n                                    } else {\n                                        self.pause();\n                                    }\n                                }\n                            }, 150);\n                        } else {\n                            clearInterval(ytProgressInterval);\n                        }\n                    },\n                    onError: function onError(e) {\n                        self.fire('error', e);\n                    },\n                };\n\n                const firstInit = !self.$video;\n                if (firstInit) {\n                    const div = document.createElement('div');\n                    div.setAttribute('id', self.playerID);\n                    hiddenDiv.appendChild(div);\n                    document.body.appendChild(hiddenDiv);\n                }\n                self.player = self.player || new window.YT.Player(self.playerID, self.playerOptions);\n                if (firstInit) {\n                    self.$video = document.getElementById(self.playerID);\n\n                    // get video width and height\n                    self.videoWidth = parseInt(self.$video.getAttribute('width'), 10) || 1280;\n                    self.videoHeight = parseInt(self.$video.getAttribute('height'), 10) || 720;\n                }\n            }\n\n            // Vimeo\n            if (self.type === 'vimeo') {\n                self.playerOptions = {\n                    id: self.videoID,\n                    autopause: 0,\n                    transparent: 0,\n                    autoplay: self.options.autoplay ? 1 : 0,\n                    loop: self.options.loop ? 1 : 0,\n                    muted: self.options.mute ? 1 : 0,\n                };\n\n                if (self.options.volume) {\n                    self.playerOptions.volume = self.options.volume;\n                }\n\n                // hide controls\n                if (!self.options.showContols) {\n                    self.playerOptions.badge = 0;\n                    self.playerOptions.byline = 0;\n                    self.playerOptions.portrait = 0;\n                    self.playerOptions.title = 0;\n                    self.playerOptions.background = 1;\n                }\n\n\n                if (!self.$video) {\n                    let playerOptionsString = '';\n                    Object.keys(self.playerOptions).forEach((key) => {\n                        if (playerOptionsString !== '') {\n                            playerOptionsString += '&';\n                        }\n                        playerOptionsString += `${key}=${encodeURIComponent(self.playerOptions[key])}`;\n                    });\n\n                    // we need to create iframe manually because when we create it using API\n                    // js events won't triggers after iframe moved to another place\n                    self.$video = document.createElement('iframe');\n                    self.$video.setAttribute('id', self.playerID);\n                    self.$video.setAttribute('src', `https://player.vimeo.com/video/${self.videoID}?${playerOptionsString}`);\n                    self.$video.setAttribute('frameborder', '0');\n                    self.$video.setAttribute('mozallowfullscreen', '');\n                    self.$video.setAttribute('allowfullscreen', '');\n\n                    hiddenDiv.appendChild(self.$video);\n                    document.body.appendChild(hiddenDiv);\n                }\n                self.player = self.player || new Vimeo.Player(self.$video, self.playerOptions);\n\n                // set current time for autoplay\n                if (self.options.startTime && self.options.autoplay) {\n                    self.player.setCurrentTime(self.options.startTime);\n                }\n\n                // get video width and height\n                self.player.getVideoWidth().then((width) => {\n                    self.videoWidth = width || 1280;\n                });\n                self.player.getVideoHeight().then((height) => {\n                    self.videoHeight = height || 720;\n                });\n\n                // events\n                let vmStarted;\n                self.player.on('timeupdate', (e) => {\n                    if (!vmStarted) {\n                        self.fire('started', e);\n                        vmStarted = 1;\n                    }\n\n                    self.fire('timeupdate', e);\n\n                    // check for end of video and play again or stop\n                    if (self.options.endTime) {\n                        if (self.options.endTime && e.seconds >= self.options.endTime) {\n                            if (self.options.loop) {\n                                self.play(self.options.startTime);\n                            } else {\n                                self.pause();\n                            }\n                        }\n                    }\n                });\n                self.player.on('play', (e) => {\n                    self.fire('play', e);\n\n                    // check for the start time and start with it\n                    if (self.options.startTime && e.seconds === 0) {\n                        self.play(self.options.startTime);\n                    }\n                });\n                self.player.on('pause', (e) => {\n                    self.fire('pause', e);\n                });\n                self.player.on('ended', (e) => {\n                    self.fire('ended', e);\n                });\n                self.player.on('loaded', (e) => {\n                    self.fire('ready', e);\n                });\n                self.player.on('volumechange', (e) => {\n                    self.fire('volumechange', e);\n                });\n                self.player.on('error', (e) => {\n                    self.fire('error', e);\n                });\n            }\n\n            // Local\n            function addSourceToLocal(element, src, type) {\n                const source = document.createElement('source');\n                source.src = src;\n                source.type = type;\n                element.appendChild(source);\n            }\n            if (self.type === 'local') {\n                if (!self.$video) {\n                    self.$video = document.createElement('video');\n\n                    // show controls\n                    if (self.options.showContols) {\n                        self.$video.controls = true;\n                    }\n\n                    // mute\n                    if (self.options.mute) {\n                        self.$video.muted = true;\n                    } else if (self.$video.volume) {\n                        self.$video.volume = self.options.volume / 100;\n                    }\n\n                    // loop\n                    if (self.options.loop) {\n                        self.$video.loop = true;\n                    }\n\n                    // autoplay enable on mobile devices\n                    self.$video.setAttribute('playsinline', '');\n                    self.$video.setAttribute('webkit-playsinline', '');\n\n                    self.$video.setAttribute('id', self.playerID);\n                    hiddenDiv.appendChild(self.$video);\n                    document.body.appendChild(hiddenDiv);\n\n                    Object.keys(self.videoID).forEach((key) => {\n                        addSourceToLocal(self.$video, self.videoID[key], `video/${key}`);\n                    });\n                }\n\n                self.player = self.player || self.$video;\n\n                let locStarted;\n                self.player.addEventListener('playing', (e) => {\n                    if (!locStarted) {\n                        self.fire('started', e);\n                    }\n                    locStarted = 1;\n                });\n                self.player.addEventListener('timeupdate', function (e) {\n                    self.fire('timeupdate', e);\n\n                    // check for end of video and play again or stop\n                    if (self.options.endTime) {\n                        if (self.options.endTime && this.currentTime >= self.options.endTime) {\n                            if (self.options.loop) {\n                                self.play(self.options.startTime);\n                            } else {\n                                self.pause();\n                            }\n                        }\n                    }\n                });\n                self.player.addEventListener('play', (e) => {\n                    self.fire('play', e);\n                });\n                self.player.addEventListener('pause', (e) => {\n                    self.fire('pause', e);\n                });\n                self.player.addEventListener('ended', (e) => {\n                    self.fire('ended', e);\n                });\n                self.player.addEventListener('loadedmetadata', function () {\n                    // get video width and height\n                    self.videoWidth = this.videoWidth || 1280;\n                    self.videoHeight = this.videoHeight || 720;\n\n                    self.fire('ready');\n\n                    // autoplay\n                    if (self.options.autoplay) {\n                        self.play(self.options.startTime);\n                    }\n                });\n                self.player.addEventListener('volumechange', (e) => {\n                    self.getVolume((volume) => {\n                        self.options.volume = volume;\n                    });\n                    self.fire('volumechange', e);\n                });\n                self.player.addEventListener('error', (e) => {\n                    self.fire('error', e);\n                });\n            }\n            callback(self.$video);\n        });\n    }\n\n    init() {\n        const self = this;\n\n        self.playerID = `VideoWorker-${self.ID}`;\n    }\n\n    loadAPI() {\n        const self = this;\n\n        if (YoutubeAPIadded && VimeoAPIadded) {\n            return;\n        }\n\n        let src = '';\n\n        // load Youtube API\n        if (self.type === 'youtube' && !YoutubeAPIadded) {\n            YoutubeAPIadded = 1;\n            src = 'https://www.youtube.com/iframe_api';\n        }\n\n        // load Vimeo API\n        if (self.type === 'vimeo' && !VimeoAPIadded) {\n            VimeoAPIadded = 1;\n\n            // Useful when Vimeo API added using RequireJS https://github.com/nk-o/video-worker/pull/7\n            if (typeof Vimeo !== 'undefined') {\n                return;\n            }\n\n            src = 'https://player.vimeo.com/api/player.js';\n        }\n\n        if (!src) {\n            return;\n        }\n\n        // add script in head section\n        let tag = document.createElement('script');\n        let head = document.getElementsByTagName('head')[0];\n        tag.src = src;\n\n        head.appendChild(tag);\n\n        head = null;\n        tag = null;\n    }\n\n    onAPIready(callback) {\n        const self = this;\n\n        // Youtube\n        if (self.type === 'youtube') {\n            // Listen for global YT player callback\n            if ((typeof YT === 'undefined' || YT.loaded === 0) && !loadingYoutubePlayer) {\n                // Prevents Ready event from being called twice\n                loadingYoutubePlayer = 1;\n\n                // Creates deferred so, other players know when to wait.\n                window.onYouTubeIframeAPIReady = function () {\n                    window.onYouTubeIframeAPIReady = null;\n                    loadingYoutubeDefer.resolve('done');\n                    callback();\n                };\n            } else if (typeof YT === 'object' && YT.loaded === 1) {\n                callback();\n            } else {\n                loadingYoutubeDefer.done(() => {\n                    callback();\n                });\n            }\n        }\n\n        // Vimeo\n        if (self.type === 'vimeo') {\n            if (typeof Vimeo === 'undefined' && !loadingVimeoPlayer) {\n                loadingVimeoPlayer = 1;\n                const vimeoInterval = setInterval(() => {\n                    if (typeof Vimeo !== 'undefined') {\n                        clearInterval(vimeoInterval);\n                        loadingVimeoDefer.resolve('done');\n                        callback();\n                    }\n                }, 20);\n            } else if (typeof Vimeo !== 'undefined') {\n                callback();\n            } else {\n                loadingVimeoDefer.done(() => {\n                    callback();\n                });\n            }\n        }\n\n        // Local\n        if (self.type === 'local') {\n            callback();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}